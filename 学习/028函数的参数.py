# 1、函数的参数类型
# 设置与传递参数是函数的重点，而 Python 的函数对参数的支持非常的灵活。
#
# 主要的参数类型有：默认参数、关键字参数（位置参数）、不定长参数。
#
# 下面我们将一一了解这几种参数。

# 2、默认参数
# 有时候，我们自定义的函数中，如果调用的时候没有设置参数，需要给个默认值，这时候就需要用到默认值参数了。
#
# 默认参数，只要在构造函数参数的时候，给参数赋值就可以了
#
# 例如：

def print_user_info(name='无名', age='未知', sex='未知'):
    # 打印用户信息
    print('昵称：{}'.format(name), end='    ')
    print('年龄：{}'.format(age), end='     ')
    print('性别：{}'.format(sex))
    return;


# 调用 print_user_info 函数

print_user_info('两点水', 18, '女')
print_user_info('三点水', 25, '男')
print_user_info()

print('_________________________________')
# 从输出结果可以看到，当你设置了默认参数的时候，在调用函数的时候，不传该参数，就会使用默认值。
#
# 但是这里需要注意的一点是：只有在形参表末尾的那些参数可以有默认参数值，也就是说你不能在声明函数形参的时候，先声明有默认值的形参而后声明没有默认值的形参。
#
# 这是因为赋给形参的值是根据位置而赋值的。例如，def func(a, b=1) 是有效的，但是 def func(a=1, b) 是 无效 的。
#
# 默认值参数就这样结束了吗？
#
# 还没有的，细想一下，如果参数中是一个可修改的容器比如一个 lsit （列表）或者 dict （字典），那么我们使用什么来作为默认值呢？

# 我们可以使用 None 作为默认值。就像下面这个例子一样：

# 如果 b 是一个 list ，可以使用 None 作为默认值
def print_info( a , b = None ):
    if b is None :
        b=[]
    return;
print((print_info(1)))
print('_________________________________')


def print_info( a , b = [] ):
    return;
print((print_info(1)))



